#!/bin/bash
set -e

# docker run --name=pgbouncer -d -e PGBOUNCER_UPSTREAM_USER=user_pgbouncer -e PGBOUNCER_UPSTREAM_PASSWORD=md58b9ad77b2409cd985b672a95d652b369 -e PGBOUNCER_UPSTREAM='host=172.17.0.1 port=5432' -p 5433:5432 livingdocs/pgbouncer
mkdir -p /etc/pgbouncer
PGBOUNCER_UPSTREAM_USER=${PGBOUNCER_UPSTREAM_USER:-postgres}

if [ "$PGBOUNCER_UPSTREAM_PASSWORD" != "" ]; then
  echo \"$PGBOUNCER_UPSTREAM_USER\" \"$PGBOUNCER_UPSTREAM_PASSWORD\" > /etc/pgbouncer/userlist.txt
else
  PGBOUNCER_AUTH_QUERY="${PGBOUNCER_AUTH_QUERY:-trust}"
  touch /etc/pgbouncer/userlist.txt
fi

cat > /etc/pgbouncer/pg_hba.conf << EOF
# TYPE  DATABASE      USER    ADDRESS         METHOD
local   all           all                     trust
host    all           all     127.0.0.1/32    trust
host    all           all     ::1/128         trust
host    all           all     0.0.0.0/0       md5
host    all           all     ::0/0           md5
EOF

if [ "$PGBOUNCER_AUTH_QUERY" == "trust" ]; then
  AUTH_QUERY="auth_query = SELECT usename, passwd FROM pg_catalog.pg_shadow WHERE usename = '\$1' AND usename <> '${PGBOUNCER_UPSTREAM_USER}';"
elif [ "$PGBOUNCER_AUTH_QUERY" == "secure" ]; then
  AUTH_QUERY="auth_query = SELECT * FROM pooler.lookup_user(\$1, '${PGBOUNCER_UPSTREAM_USER}');"
elif [ "$PGBOUNCER_AUTH_QUERY" != "" ] && [ "$PGBOUNCER_AUTH_QUERY" != "false" ]; then
  AUTH_QUERY="auth_query = ${PGBOUNCER_AUTH_QUERY}"
fi

cat > /etc/pgbouncer/pgbouncer.ini << EOF
[databases]
* = ${PGBOUNCER_UPSTREAM:-host=/var/run/postgresql port=5432}

[pgbouncer]
listen_addr = *
listen_port = ${PGBOUNCER_PORT:-5433}
auth_type = hba
admin_users = ${PGBOUNCER_UPSTREAM_USER}
stats_users = ${PGBOUNCER_UPSTREAM_USER}
auth_user = ${PGBOUNCER_UPSTREAM_USER}
auth_file = /etc/pgbouncer/userlist.txt
auth_hba_file = /etc/pgbouncer/pg_hba.conf
${AUTH_QUERY}

# prefer, required, or verify-full
server_tls_sslmode = ${PGBOUNCER_SERVER_SSL_MODE:-prefer}
#client_tls_sslmode = ${PGBOUNCER_CLIENT_SSL_MODE:-prefer}
#client_tls_key_file = /etc/pgbouncer/certificate.key
#client_tls_cert_file = /etc/pgbouncer/certificate.cert
#client_tls_ciphers = normal

# session or transaction
pool_mode = ${PGBOUNCER_POOL_MODE:-transaction}
server_reset_query = ${PGBOUNCER_SERVER_RESET_QUERY:-DEALLOCATE ALL}
max_client_conn = ${PGBOUNCER_MAX_CLIENT_CONN:-1000}
max_user_connections = ${PGBOUNCER_USER_CONNECTIONS:-150}
default_pool_size = ${PGBOUNCER_DEFAULT_POOL_SIZE:-1}
min_pool_size = ${PGBOUNCER_MIN_POOL_SIZE:-0}
reserve_pool_size = ${PGBOUNCER_RESERVE_POOL_SIZE:-1}
reserve_pool_timeout = ${PGBOUNCER_RESERVE_POOL_TIMEOUT:-5.0}
server_lifetime = ${PGBOUNCER_SERVER_LIFETIME:-3600}
server_idle_timeout = ${PGBOUNCER_SERVER_IDLE_TIMEOUT:-300}
log_connections = ${PGBOUNCER_LOG_CONNECTIONS:-1}
log_disconnections = ${PGBOUNCER_LOG_DISCONNECTIONS:-1}
log_pooler_errors = ${PGBOUNCER_LOG_POOLER_ERRORS:-1}
stats_period = ${PGBOUNCER_STATS_PERIOD:-60}
query_wait_timeout = ${PGBOUNCER_QUERY_WAIT_TIMEOUT:-120}
tcp_keepalive = 1
tcp_keepidle = 60
server_fast_close = 1
client_login_timeout = 15
EOF

chown -R pgbouncer:pgbouncer /var/log/pgbouncer
exec pgbouncer --user=pgbouncer /etc/pgbouncer/pgbouncer.ini
