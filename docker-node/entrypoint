#!/bin/bash
if [ "$#" != "0" ]; then exec $@; fi

set -ef
if [ "${PLUGIN_WHENCHANGED:-}" ]; then files-changed "$PLUGIN_WHENCHANGED" || exit 0; fi
docker-login

if [ "${PLUGIN_TAG:-false}" == "true" ]; then
  push-docker-tag
  >&2 echo "Done"
  exit 0
fi

eval $(docker-image-tags)

# If `pull: true` or `tag: true` are defined, we only pull the image, no build happens
if [ "${PLUGIN_PULL:-false}" == "true" ]; then
  docker pull $SHA_TAG
else
  EXTRA_OPTS="--tag=$SHA_TAG --tag=$BRANCH_TAG"
  if [ -n "${PLUGIN_TARGET:-}" ]; then EXTRA_OPTS="$EXTRA_OPTS --target=${PLUGIN_TARGET}"; fi

  LABELS="--label org.opencontainers.image.created=$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

  if [ -n "$DRONE_COMMIT_LINK" ]; then LABELS="$LABELS --label org.opencontainers.image.source=${DRONE_COMMIT_LINK:-}";
  else LABELS="$LABELS --label org.opencontainers.image.source=${DRONE_REPO_LINK:-}"; fi

  if [ -n "$DRONE_TAG" ]; then LABELS="$LABELS --label org.opencontainers.image.version=${DRONE_TAG:-}"; fi

  LABELS="$LABELS --label org.opencontainers.image.vendor=Livingdocs"
  LABELS="$LABELS --label org.opencontainers.image.revision=${DRONE_COMMIT_SHA:-}"

  if [ -n "${DRONE_BRANCH:-}" ]; then LABELS="$LABELS --label io.livingdocs.vcs.branch=${DRONE_BRANCH:-}"

  PLUGIN_CONTEXT="${PLUGIN_CONTEXT:-.}"
  PLUGIN_DOCKERFILE="${PLUGIN_DOCKERFILE:-Dockerfile}"
  PLUGIN_CACHE=${PLUGIN_CACHE:-true}
  if [ "$PLUGIN_CACHE" == "false" ]; then EXTRA_OPTS="$EXTRA_OPTS --no-cache"; fi

  docker build -f $PLUGIN_DOCKERFILE $LABELS $EXTRA_OPTS $PLUGIN_CONTEXT
fi

if [ "${PLUGIN_PUSH:-false}" == "true" ]; then
  push-docker-sha
fi

>&2 echo "Done"
