#!/bin/bash
if [ "$#" != "0" ]; then exec $@; fi

if [ "$PLUGIN_DOCKERHOSTSSHKEY" != "" ]; then
  export DOCKER_HOST="ssh://docker"
  echo "$PLUGIN_DOCKERHOSTSSHKEY" > ~/.ssh/private_key
  chmod 600 ~/.ssh/private_key

  echo "Host docker" >> ~/.ssh/config
  echo "  StrictHostKeyChecking no" >> ~/.ssh/config
  echo "  HostName $PLUGIN_DOCKERHOSTSSHIP" >> ~/.ssh/config
  echo "  Port ${PLUGIN_DOCKERHOSTSSHPORT:-22}" >> ~/.ssh/config
  echo "  User ${PLUGIN_DOCKERHOSTSSHUSER:-root}" >> ~/.ssh/config
  echo "  IdentityFile ~/.ssh/private_key" >> ~/.ssh/config
fi

set -ef
if [ -n "$PLUGIN_WHENCHANGED" ]; then files-changed "$PLUGIN_WHENCHANGED" || exit 0; fi
docker-login || true

if [ "${PLUGIN_TAG:-false}" == "true" ]; then
  push-docker-tag
  >&2 echo "Done"
  exit 0
fi

eval $(docker-image-tags)

# If `pull: true` or `tag: true` are defined, we only pull the image, no build happens
if [ "${PLUGIN_PULL:-false}" == "true" ]; then
  docker pull $SHA_TAG
else
  EXTRA_OPTS="--tag=$SHA_TAG --tag=$BRANCH_TAG"
  if [ -n "$PLUGIN_TARGET" ]; then EXTRA_OPTS="$EXTRA_OPTS --target=$PLUGIN_TARGET"; fi

  LABELS="--label org.opencontainers.image.created=$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

  if [ -n "$DRONE_COMMIT_LINK" ]; then LABELS="$LABELS --label org.opencontainers.image.source=$DRONE_COMMIT_LINK";
  else LABELS="$LABELS --label org.opencontainers.image.source=$DRONE_REPO_LINK"; fi

  if [ -n "$DRONE_TAG" ]; then LABELS="$LABELS --label org.opencontainers.image.version=$DRONE_TAG"; fi

  LABELS="$LABELS --label org.opencontainers.image.vendor=Livingdocs"
  LABELS="$LABELS --label org.opencontainers.image.revision=$DRONE_COMMIT_SHA"


  if [ -n "$DRONE_BRANCH" ]; then LABELS="$LABELS --label livingdocs.branch=$(sed 's/[^a-zA-Z0-9.-_]/-/g' <<< "$DRONE_BRANCH")"; fi

  RELEASE_CHANNEL=$(jq -er '.release.branch //empty' package.json 2>1 /dev/null || jq -er '.release.branches //empty' 2>1 /dev/null)
  if [ -n "$RELEASE_CHANNEL" ]; then LABELS="$LABELS --label livingdocs.release=$RELEASE_CHANNEL"; fi

  PLUGIN_CONTEXT="${PLUGIN_CONTEXT:-.}"
  PLUGIN_DOCKERFILE="${PLUGIN_DOCKERFILE:-Dockerfile}"
  PLUGIN_CACHE=${PLUGIN_CACHE:-true}
  if [ "$PLUGIN_CACHE" == "false" ]; then EXTRA_OPTS="$EXTRA_OPTS --no-cache"; fi

  docker build --build-arg DRONE_BRANCH=$DRONE_BRANCH --build-arg DRONE_COMMIT_SHA=$DRONE_COMMIT_SHA --build-arg DRONE_SEMVER=$DRONE_SEMVER --build-arg DRONE_SEMVER_SHORT=$DRONE_SEMVER_SHORT --build-arg DRONE_TAG=$DRONE_TAG -f $PLUGIN_DOCKERFILE $LABELS $EXTRA_OPTS $PLUGIN_CONTEXT
fi

if [ "${PLUGIN_PUSH:-false}" == "true" ]; then
  push-docker-sha
fi

>&2 echo "Done"
